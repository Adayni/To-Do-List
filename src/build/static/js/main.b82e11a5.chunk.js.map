{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","this","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","updateInput","target","onClick","addItem","disabled","length","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAmIeA,G,wDA/Hb,WAAaC,GAAQ,IAAD,8BAClB,cAAOA,IAGFC,MAAM,CACTC,QAAQ,GACRC,KAAK,IANW,E,gEAYlBC,KAAKC,+BAELC,OAAOC,iBACL,eAAgBH,KAAKI,wBAAwBC,KAAKL,S,6CAKpDE,OAAOI,oBACL,eAAgBN,KAAKI,wBAAwBC,KAAKL,OAGpDA,KAAKI,4B,qDAIL,IAAK,IAAIG,KAAOP,KAAKH,MACnB,GAAIW,aAAaC,eAAeF,GAAM,CACpC,IAAIG,EAAQF,aAAaG,QAAQJ,GAEjC,IACEG,EAAQE,KAAKC,MAAMH,GACnBV,KAAKc,SAAL,eAAiBP,EAAMG,IACvB,MAAOK,GACPf,KAAKc,SAAL,eAAiBP,EAAMG,Q,gDAQ7B,IAAK,IAAIH,KAAOP,KAAKH,MACnBW,aAAaQ,QAAQT,EAAKK,KAAKK,UAAUjB,KAAKH,MAAMU,O,kCAK5CA,EAAKG,GACfV,KAAKc,SAAL,eACGP,EAAMG,M,gCAQT,IAAMZ,EAAQ,CACZoB,GAAI,EAAIC,KAAKC,SACbV,MAAOV,KAAKH,MAAMC,QAAQuB,SAItBtB,EAAI,YAAOC,KAAKH,MAAME,MAG5BA,EAAKuB,KAAKxB,GAGVE,KAAKc,SAAS,CACZf,OACAD,QAAQ,O,iCAKDoB,GAGT,IAGMK,EAHI,YAAOvB,KAAKH,MAAME,MAGHyB,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDlB,KAAKc,SAAS,CAACf,KAAMwB,M,+BAIb,IAAD,OACP,OAEE,gCAEA,oBAAIG,UAAU,UAAd,wBAEA,qBAAKA,UAAU,MAAf,SACE,gCAEE,oEACA,uBAEA,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBlB,MAAOV,KAAKH,MAAMC,QAAS+B,SAAU,SAAAd,GAAC,OAAI,EAAKe,YAAY,UAAWf,EAAEgB,OAAOrB,UACjI,wBAAQgB,UAAU,MAAMM,QAAS,kBAAM,EAAKC,WAAWC,UAAWlC,KAAKH,MAAMC,QAAQqC,OAArF,iBACA,uBAEA,6BACGnC,KAAKH,MAAME,KAAKqC,KAAI,SAAAX,GACnB,OACE,+BAAmBA,EAAKf,MAAxB,IAAgC,IAC9B,wBAAQgB,UAAU,SAASM,QAAS,kBAAM,EAAKK,WAAWZ,EAAKP,KAA/D,iBADOO,EAAKP,qB,GAhHXoB,cCSJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b82e11a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './app.css'; //import stylesheet\n\nclass App  extends Component {\n  constructor (props) {\n    super (props);\n\n    //creation of variables\n    this.state={\n      newItem:\"\",\n      list:[]\n    };\n  }\n\n  //local storgae functionality\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n\n    window.addEventListener(\n      \"beforeunload\", this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\", this.saveStateToLocalStorage.bind(this)\n    );\n\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    for (let key in this.state) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  //save to Local Storage\n  saveStateToLocalStorage() {\n    for (let key in this.state) {\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n  \n  //update react state\n  updateInput(key, value){\n    this.setState({\n      [key]: value\n    });\n  }\n\n  //AddItem function\n  addItem() {\n\n    //give each list item a unique ID\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item\n    list.push(newItem);\n\n    //update state with new list and reset input field\n    this.setState({\n      list,\n      newItem:\"\"\n    });\n  }\n\n  //deleteItem function\n  deleteItem(id) {\n    \n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list: updatedList});\n  }\n\n  //JSX \n  render() {\n    return (\n\n      <div>\n\n      <h1 className=\"heading\">To-Do List</h1>\n\n      <div className=\"App\">\n        <div>\n\n          <p>What do you have to get done today?</p>\n          <br/>\n\n          <input type=\"text\" placeholder=\"New item here...\" value={this.state.newItem} onChange={e => this.updateInput(\"newItem\", e.target.value)}/>\n          <button className=\"add\" onClick={() => this.addItem()} disabled={!this.state.newItem.length}>Add</button> \n          <br/>\n\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id}>{item.value} {\" \"}\n                  <button className=\"delete\" onClick={() => this.deleteItem(item.id)}>\n                    X\n                  </button>\n                </li>\n              );              \n            })}\n          </ul>\n\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n  \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}